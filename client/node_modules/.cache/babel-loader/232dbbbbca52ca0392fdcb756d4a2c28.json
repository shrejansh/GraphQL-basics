{"ast":null,"code":"var _jsxFileName = \"/home/danbo/Desktop/graphQL-basic/client/src/components/AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Select } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_AUTHORS = gql`\n    {\n        authors{\n            name\n            id\n        }\n    }\n`;\nexport const AddBook = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AUTHORS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`; // useEffect(()=>{\n  //     console.log(data)\n  // },[data])\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Select author\",\n      children: data.authors.map(dog => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: dog.name,\n        children: dog.name\n      }, dog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBook, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/home/danbo/Desktop/graphQL-basic/client/src/components/AddBook.js"],"names":["React","useEffect","gql","useQuery","Select","GET_AUTHORS","AddBook","loading","error","data","message","authors","map","dog","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAYC,QAAZ,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAEA,MAAMC,WAAW,GAACH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,OAAO,MAAMI,OAAO,GAAC,MAAI;AAAA;;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,WAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B,CAJU,CAMrB;AACA;AACA;AACA;;AACA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,eAApB;AAAA,gBACCD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,GAAG,iBACjB;AAAqB,QAAA,KAAK,EAAEA,GAAG,CAACC,IAAhC;AAAA,kBACCD,GAAG,CAACC;AADL,SAAaD,GAAG,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAvBM;;GAAMT,O;UACwBH,Q;;;KADxBG,O","sourcesContent":["import React,{useEffect} from 'react';\nimport {gql,useQuery} from '@apollo/client';\nimport { Select } from \"@chakra-ui/react\"\n\nconst GET_AUTHORS=gql`\n    {\n        authors{\n            name\n            id\n        }\n    }\n` \nexport const AddBook=()=>{\n    const { loading, error, data } = useQuery(GET_AUTHORS);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    // useEffect(()=>{\n    //     console.log(data)\n    // },[data])\n    // console.log(data)\n    return(\n        <div>\n            <Select placeholder=\"Select author\">\n            {data.authors.map(dog => (\n                <option key={dog.id} value={dog.name}>\n                {dog.name}\n                </option>\n            ))}\n            </Select>\n            \n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}