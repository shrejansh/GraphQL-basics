{"ast":null,"code":"var _jsxFileName = \"/home/danbo/Desktop/graphQL-basic/client/src/index.js\";\n// import * as React from \"react\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'https://localhost:4000/graphql',\n  cache: new InMemoryCache()\n}); // const client = ...\n// client\n//   .query({\n//     query: gql`\n//       query GetRates {\n//         rates(currency: \"USD\") {\n//           currency\n//         }\n//       }\n//     `\n//   })\n//   .then(result => console.log(result));\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"sources":["/home/danbo/Desktop/graphQL-basic/client/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","ChakraProvider","client","uri","cache","render","document","getElementById"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;AAOA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,EAAAA,GAAG,EAAE,gCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFuB,CAAjB,CAAf,C,CAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIAH,QAAQ,CAACW,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEH,MAAxB;AAAA,yBACA,QAAC,cAAD;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,QADF,EAOEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF,E,CAUA;AACA;AACA;AACA","sourcesContent":["// import * as React from \"react\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nconst client = new ApolloClient({\n  uri: 'https://localhost:4000/graphql',\n  cache: new InMemoryCache()\n});\n\n// const client = ...\n\n// client\n//   .query({\n//     query: gql`\n//       query GetRates {\n//         rates(currency: \"USD\") {\n//           currency\n//         }\n//       }\n//     `\n//   })\n//   .then(result => console.log(result));\n\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <ChakraProvider>\n      <App />\n      \n    </ChakraProvider>\n    </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"]},"metadata":{},"sourceType":"module"}