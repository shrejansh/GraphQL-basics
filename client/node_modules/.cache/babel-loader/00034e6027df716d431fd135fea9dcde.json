{"ast":null,"code":"var _jsxFileName = \"/home/danbo/Desktop/graphQL-basic/client/src/components/BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ListItem, UnorderedList, Text, extendTheme, withDefaultColorScheme } from \"@chakra-ui/react\";\nimport { GET_BOOK } from '../queries/queries';\nimport { useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customTheme = extendTheme(withDefaultColorScheme({\n  colorScheme: \"blackAlpha\"\n}));\nexport const BookDetails = ({\n  bookid\n}) => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BOOK, {\n    variables: {\n      id: bookid\n    }\n  });\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`; // useEffect(()=>{\n  //     console.log(data)\n  // },[data])\n\n  console.log(data);\n\n  const displayDetails = () => {\n    const {\n      book\n    } = data;\n\n    if (book) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: book.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"blue\",\n          children: book.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"blue\",\n          children: book.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"blue\",\n          children: \"All books by this author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(UnorderedList, {\n          children: book.author.books.map(item => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: item.name\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this);\n    }\n  }; // console.log(data)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"book-details\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Details\", displayDetails()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n};\n\n_s(BookDetails, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"sources":["/home/danbo/Desktop/graphQL-basic/client/src/components/BookDetails.js"],"names":["React","ListItem","UnorderedList","Text","extendTheme","withDefaultColorScheme","GET_BOOK","useQuery","customTheme","colorScheme","BookDetails","bookid","loading","error","data","variables","id","message","console","log","displayDetails","book","name","genre","author","books","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EACIC,aADJ,EAEIC,IAFJ,EAGIC,WAHJ,EAIAC,sBAJA,QAI8B,kBAJ9B;AAKA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,WAAW,GAAGJ,WAAW,CAACC,sBAAsB,CAAC;AAAEI,EAAAA,WAAW,EAAE;AAAf,CAAD,CAAvB,CAA/B;AAEI,OAAO,MAAMC,WAAW,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACD,QAAD,EAAU;AAC/CS,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAACL;AAAL;AADoC,GAAV,CAAzC;AAIA,MAAIC,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACI,OAAQ,EAA/B,CANsB,CAQjC;AACA;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,QAAMM,cAAc,GAAC,MAAI;AACrB,UAAM;AAACC,MAAAA;AAAD,QAAOP,IAAb;;AACA,QAAGO,IAAH,EAAQ;AACJ,0BACI;AAAA,gCACI;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,MAAZ;AAAA,oBAAoBD,IAAI,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,MAAZ;AAAA,oBAAoBF,IAAI,CAACG,MAAL,CAAYF;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,aAAD;AAAA,oBACKD,IAAI,CAACG,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,IAAE;AACzB,gCAAO,QAAC,QAAD;AAAA,wBAAyBA,IAAI,CAACL;AAA9B,eAAeK,IAAI,CAACX,EAApB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH;AACJ,GAjBD,CAZiC,CA8BjC;;;AAEA,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,2BACG;AAAA,4BACKI,cAAc,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtCM;;GAAMV,W;UACwBH,Q;;;KADxBG,W","sourcesContent":["import React from 'react';\nimport {ListItem,\n    UnorderedList,\n    Text,\n    extendTheme,\nwithDefaultColorScheme } from \"@chakra-ui/react\";\nimport { GET_BOOK } from '../queries/queries';\nimport { useQuery } from '@apollo/client';\n\nconst customTheme = extendTheme(withDefaultColorScheme({ colorScheme: \"blackAlpha\" }))\n\n    export const BookDetails=({bookid})=>{\n        const { loading, error, data } = useQuery(GET_BOOK,{\n            variables: { id:bookid },\n          });\n    \n        if (loading) return 'Loading...';\n        if (error) return `Error! ${error.message}`;\n    \n        // useEffect(()=>{\n        //     console.log(data)\n        // },[data])\n        console.log(data)\n        const displayDetails=()=>{\n            const {book}=data;\n            if(book){\n                return(\n                    <div>\n                        <h2>{book.name}</h2>\n                        <Text color=\"blue\">{book.genre}</Text>\n                        <Text color=\"blue\">{book.author.name}</Text>\n                        <Text color=\"blue\">All books by this author</Text>\n                        <UnorderedList>\n                            {book.author.books.map(item=>{\n                                return <ListItem key={item.id}>{item.name}</ListItem>\n                            })}\n                        </UnorderedList>\n                    </div>\n                )\n            }\n        }\n        // console.log(data)\n       \n        return(\n            <div id=\"book-details\">\n               <div>Details\n                   {displayDetails()}</div>\n            </div>\n        );\n    }"]},"metadata":{},"sourceType":"module"}