{"ast":null,"code":"var _jsxFileName = \"/home/danbo/Desktop/graphQL-basic/client/src/components/AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client'; // import { Select } from \"@chakra-ui/react\";\n\nimport { Stack, InputGroup, InputLeftAddon, Select, Input, Button } from \"@chakra-ui/react\";\nimport { GET_AUTHORS } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddBook = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AUTHORS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`; // useEffect(()=>{\n  //     console.log(data)\n  // },[data])\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n          children: \"Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select author\",\n        children: data.authors.map(dog => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dog.name,\n          children: dog.name\n        }, dog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBook, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/home/danbo/Desktop/graphQL-basic/client/src/components/AddBook.js"],"names":["React","useEffect","useState","useQuery","Stack","InputGroup","InputLeftAddon","Select","Input","Button","GET_AUTHORS","AddBook","loading","error","data","message","authors","map","dog","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,QAAR,QAAuB,gBAAvB,C,CACA;;AACA,SAASC,KAAT,EACIC,UADJ,EAEIC,cAFJ,EAGIC,MAHJ,EAIIC,KAJJ,EAKIC,MALJ,QAKkB,kBALlB;AAMA,SAASC,WAAT,QAA4B,oBAA5B;;AAGA,OAAO,MAAMC,OAAO,GAAC,MAAI;AAAA;;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACO,WAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B,CAJU,CAMrB;AACA;AACA;AACA;;AACA,sBACI;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,8BACE,QAAC,UAAD;AAAA,gCACM,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADN,eAEM,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAA,gCACM,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADN,eAEM,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWA,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,eAApB;AAAA,kBACCD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,GAAG,iBACjB;AAAqB,UAAA,KAAK,EAAEA,GAAG,CAACC,IAAhC;AAAA,oBACCD,GAAG,CAACC;AADL,WAAaD,GAAG,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADH;AADD;AAAA;AAAA;AAAA;AAAA,cAXA,eAmBI,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CApCM;;GAAMT,O;UACwBR,Q;;;KADxBQ,O","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport {useQuery} from '@apollo/client';\n// import { Select } from \"@chakra-ui/react\";\nimport { Stack,\n    InputGroup,\n    InputLeftAddon,\n    Select,\n    Input,\n    Button } from \"@chakra-ui/react\";\nimport { GET_AUTHORS } from '../queries/queries';\n\n\nexport const AddBook=()=>{\n    const { loading, error, data } = useQuery(GET_AUTHORS);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    // useEffect(()=>{\n    //     console.log(data)\n    // },[data])\n    // console.log(data)\n    return(\n        <div>\n            <Stack spacing={4}>\n              <InputGroup>\n                    <InputLeftAddon children=\"Book\" />\n                    <Input />\n                </InputGroup>\n\n              <InputGroup>\n                    <InputLeftAddon children=\"Genre\" />\n                    <Input />\n                </InputGroup>\n\n            <Select placeholder=\"Select author\">\n            {data.authors.map(dog => (\n                <option key={dog.id} value={dog.name}>\n                {dog.name}\n                </option>\n            ))}\n            </Select>\n            \n                <Button colorScheme=\"blue\">Add</Button>\n\n            </Stack>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}