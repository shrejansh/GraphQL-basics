{"ast":null,"code":"var _jsxFileName = \"/home/danbo/Desktop/graphQL-basic/client/src/components/AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client'; // import { Select } from \"@chakra-ui/react\";\n\nimport { Stack, InputGroup, InputLeftAddon, Select, Input, Button } from \"@chakra-ui/react\";\nimport { GET_AUTHORS, ADD_BOOK, GET_BOOKS } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddBook = () => {\n  _s();\n\n  const [{\n    book,\n    genre,\n    author\n  }, setValue] = useState({\n    book: \"\",\n    genre: \"\",\n    author: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addBook({\n      variables: {\n        name: book,\n        genre: genre,\n        authorId: author\n      },\n      refetchQueries: [{\n        query: GET_BOOKS\n      }]\n    });\n    console.log(book, genre, author);\n  };\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AUTHORS);\n  const [addBook] = useMutation(ADD_BOOK);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`; // useEffect(()=>{\n  //     console.log(data)\n  // },[data])\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      maxW: 'xl',\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: book\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n          children: \"Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: book,\n          required: true,\n          onChange: e => setValue(currentState => ({ ...currentState,\n            book: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: genre,\n          required: true,\n          onChange: e => setValue(currentState => ({ ...currentState,\n            genre: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select author\",\n        value: author,\n        onChange: e => setValue(currentState => ({ ...currentState,\n          author: e.target.value\n        })),\n        children: data.authors.map(dog => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dog.id,\n          children: dog.name\n        }, dog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        color: 'purple.400',\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBook, \"85+48tSGYfr3BTCU/pWBGj47reE=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/home/danbo/Desktop/graphQL-basic/client/src/components/AddBook.js"],"names":["React","useEffect","useState","useQuery","useMutation","Stack","InputGroup","InputLeftAddon","Select","Input","Button","GET_AUTHORS","ADD_BOOK","GET_BOOKS","AddBook","book","genre","author","setValue","handleSubmit","e","preventDefault","addBook","variables","name","authorId","refetchQueries","query","console","log","loading","error","data","message","currentState","target","value","authors","map","dog","id"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport {useQuery,useMutation} from '@apollo/client';\n// import { Select } from \"@chakra-ui/react\";\nimport { Stack,\n    InputGroup,\n    InputLeftAddon,\n    Select,\n    Input,\n    Button } from \"@chakra-ui/react\";\nimport { GET_AUTHORS,ADD_BOOK,GET_BOOKS } from '../queries/queries';\n\n\nexport const AddBook=()=>{\n   const [{book,genre,author},setValue]=useState({book:\"\",genre:\"\",author:\"\"})\n   const handleSubmit=(e)=>{\n        e.preventDefault();\n        addBook({ variables: { name: book ,genre:genre ,authorId:author},\n            refetchQueries:[{query:GET_BOOKS}]});\n        \n        console.log(book,genre,author); \n    }\n    const { loading, error, data } = useQuery(GET_AUTHORS);\n    const [addBook] = useMutation(ADD_BOOK);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    // useEffect(()=>{\n    //     console.log(data)\n    // },[data])\n    // console.log(data)\n    return(\n        <div>\n            <Stack maxW={'xl'} spacing={4}>\n                <h2>{book}</h2>\n              <InputGroup>\n                    <InputLeftAddon children=\"Book\" />\n                    <Input value={book} required onChange={(e)=>setValue(currentState=>({...currentState,book:e.target.value}))}/>\n                </InputGroup>\n                <h2>{genre}</h2>\n              <InputGroup>\n                    <InputLeftAddon children=\"Genre\" />\n                    <Input value={genre} required onChange={(e)=>setValue(currentState=>({...currentState,genre:e.target.value}))}/>\n                </InputGroup>\n\n            <Select placeholder=\"Select author\" value={author} onChange={(e)=>setValue(currentState=>({...currentState,author:e.target.value}))}>\n            {data.authors.map(dog => (\n                <option key={dog.id} value={dog.id}>\n                {dog.name}\n                </option>\n            ))}\n            </Select>\n            \n                <Button type=\"submit\" onClick={handleSubmit} color={'purple.400'}>Add</Button>\n\n            </Stack>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}