{"ast":null,"code":"var _jsxFileName = \"/home/danbo/Desktop/graphQL-basic/client/src/components/AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { gql, useQuery } from '@apollo/client'; // import { Select } from \"@chakra-ui/react\";\n\nimport { InputGroup, InputLeftAddon, Select, Input } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_AUTHORS = gql`\n    {\n        authors{\n            name\n            id\n        }\n    }\n`;\nexport const AddBook = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AUTHORS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`; // useEffect(()=>{\n  //     console.log(data)\n  // },[data])\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Select author\",\n      children: data.authors.map(dog => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: dog.name,\n        children: dog.name\n      }, dog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBook, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/home/danbo/Desktop/graphQL-basic/client/src/components/AddBook.js"],"names":["React","useEffect","gql","useQuery","InputGroup","InputLeftAddon","Select","Input","GET_AUTHORS","AddBook","loading","error","data","message","authors","map","dog","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAYC,QAAZ,QAA2B,gBAA3B,C,CACA;;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAoCC,MAApC,EAA2CC,KAA3C,QAAwD,kBAAxD;;AAEA,MAAMC,WAAW,GAACN,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,OAAO,MAAMO,OAAO,GAAC,MAAI;AAAA;;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACK,WAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B,CAJU,CAMrB;AACA;AACA;AACA;;AACA,sBACI;AAAA,4BACM,QAAC,UAAD;AAAA,8BACM,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADN,eAEM,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eAMI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,eAApB;AAAA,gBACCD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,GAAG,iBACjB;AAAqB,QAAA,KAAK,EAAEA,GAAG,CAACC,IAAhC;AAAA,kBACCD,GAAG,CAACC;AADL,SAAaD,GAAG,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA5BM;;GAAMT,O;UACwBN,Q;;;KADxBM,O","sourcesContent":["import React,{useEffect} from 'react';\nimport {gql,useQuery} from '@apollo/client';\n// import { Select } from \"@chakra-ui/react\";\nimport { InputGroup, InputLeftAddon,Select,Input } from \"@chakra-ui/react\";\n\nconst GET_AUTHORS=gql`\n    {\n        authors{\n            name\n            id\n        }\n    }\n` \nexport const AddBook=()=>{\n    const { loading, error, data } = useQuery(GET_AUTHORS);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    // useEffect(()=>{\n    //     console.log(data)\n    // },[data])\n    // console.log(data)\n    return(\n        <div>\n              <InputGroup>\n                    <InputLeftAddon children=\"Book\" />\n                    <Input />\n                </InputGroup>\n\n            <Select placeholder=\"Select author\">\n            {data.authors.map(dog => (\n                <option key={dog.id} value={dog.name}>\n                {dog.name}\n                </option>\n            ))}\n            </Select>\n            \n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}